{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Square from \"./Square\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar GameBoard = function GameBoard(route) {\n  var _useState = useState(60),\n      _useState2 = _slicedToArray(_useState, 2),\n      timeLeft = _useState2[0],\n      setTimeLeft = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      gameOver = _useState4[0],\n      setGameOver = _useState4[1];\n\n  useEffect(function () {\n    if (!timeLeft) {\n      setGameOver(true);\n      return;\n    }\n\n    var timerId = setInterval(function () {\n      setTimeLeft(timeLeft - 1);\n    }, 800);\n    return function () {\n      return clearInterval(timerId);\n    };\n  }, [timeLeft]);\n  return _jsxs(ImageBackground, {\n    style: styles.container,\n    source: require(\"../assets/background.png\"),\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \"Gid's Whackamole Game!\"\n    }), _jsxs(Text, {\n      children: [\"You have \", timeLeft, \" seconds left\"]\n    }), _jsxs(Text, {\n      children: [props.score, \" Moles whacked!\"]\n    }), _jsxs(Text, {\n      children: [\"You're whacking \", props.mole, \"!\"]\n    }), _jsxs(View, {\n      style: styles.game,\n      children: [_jsx(Square, {\n        gameOver: gameOver\n      }), _jsx(Square, {\n        gameOver: gameOver\n      }), _jsx(Square, {\n        gameOver: gameOver\n      }), _jsx(Square, {\n        gameOver: gameOver\n      }), _jsx(Square, {\n        gameOver: gameOver\n      }), _jsx(Square, {\n        gameOver: gameOver\n      }), _jsx(Square, {\n        gameOver: gameOver\n      }), _jsx(Square, {\n        gameOver: gameOver\n      }), _jsx(Square, {\n        gameOver: gameOver\n      }), _jsx(Square, {\n        gameOver: gameOver\n      }), _jsx(Square, {\n        gameOver: gameOver\n      }), _jsx(Square, {\n        gameOver: gameOver\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'lightblue',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  game: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    width: 300,\n    paddingTop: 20\n  },\n  header: {\n    fontWeight: 'bold',\n    marginBottom: 10,\n    marginTop: 100,\n    color: 'purple'\n  }\n});\nexport default GameBoard;","map":{"version":3,"names":["React","useEffect","useState","Square","GameBoard","route","timeLeft","setTimeLeft","gameOver","setGameOver","timerId","setInterval","clearInterval","styles","container","require","header","props","score","mole","game","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","flexDirection","flexWrap","width","paddingTop","fontWeight","marginBottom","marginTop","color"],"sources":["/Users/gideoncrawley/Desktop/Make School/few_2.4/whackamole/components/GameBoard.js"],"sourcesContent":["import React, {useEffect, useState } from 'react' \nimport { StyleSheet, Text, View, ImageBackground  } from 'react-native'\nimport Square  from './Square'\n\nconst GameBoard = (route) => {\n  const [timeLeft, setTimeLeft] = useState(60)\n    const [gameOver, setGameOver] = useState(false)\n\n    useEffect(() => {\n        if(!timeLeft)  { \n            setGameOver(true)\n            return\n        }\n        const timerId = setInterval(() => {\n            //happens every 1000ms\n            setTimeLeft(timeLeft -1)\n        },800)\n        return () => clearInterval(timerId)\n    }, [timeLeft])\n    \n    return (\n        <ImageBackground \n        style={styles.container}\n        source={require('../assets/background.png')}\n        >\n        <Text style={styles.header}>Gid's Whackamole Game!</Text>\n        <Text>You have {timeLeft} seconds left</Text>\n        <Text>{props.score} Moles whacked!</Text>\n        <Text>You're whacking {props.mole}!</Text>\n\n        <View style={styles.game}>\n        <Square gameOver={gameOver}/>\n        <Square gameOver={gameOver}/>        \n        <Square gameOver={gameOver}/>        \n        <Square gameOver={gameOver}/>  \n        <Square gameOver={gameOver}/>  \n        <Square gameOver={gameOver}/>          \n        <Square gameOver={gameOver}/>  \n        <Square gameOver={gameOver}/>  \n        <Square gameOver={gameOver}/>  \n        <Square gameOver={gameOver}/>  \n        <Square gameOver={gameOver}/>  \n        <Square gameOver={gameOver}/>  \n        </View>\n      </ImageBackground>\n\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: 'lightblue',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  \n    game: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      width: 300,\n      paddingTop: 20\n    },\n    header: {\n        fontWeight: 'bold',\n        marginBottom: 10,\n        marginTop: 100,\n        color: 'purple'\n\n    }\n\n  });\n\nexport default GameBoard\n\n"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAA0C,OAA1C;;;;;AAEA,OAAOC,MAAP;;;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;EAC3B,gBAAgCH,QAAQ,CAAC,EAAD,CAAxC;EAAA;EAAA,IAAOI,QAAP;EAAA,IAAiBC,WAAjB;;EACE,iBAAgCL,QAAQ,CAAC,KAAD,CAAxC;EAAA;EAAA,IAAOM,QAAP;EAAA,IAAiBC,WAAjB;;EAEAR,SAAS,CAAC,YAAM;IACZ,IAAG,CAACK,QAAJ,EAAe;MACXG,WAAW,CAAC,IAAD,CAAX;MACA;IACH;;IACD,IAAMC,OAAO,GAAGC,WAAW,CAAC,YAAM;MAE9BJ,WAAW,CAACD,QAAQ,GAAE,CAAX,CAAX;IACH,CAH0B,EAGzB,GAHyB,CAA3B;IAIA,OAAO;MAAA,OAAMM,aAAa,CAACF,OAAD,CAAnB;IAAA,CAAP;EACH,CAVQ,EAUN,CAACJ,QAAD,CAVM,CAAT;EAYA,OACI,MAAC,eAAD;IACA,KAAK,EAAEO,MAAM,CAACC,SADd;IAEA,MAAM,EAAEC,OAAO,4BAFf;IAAA,WAIA,KAAC,IAAD;MAAM,KAAK,EAAEF,MAAM,CAACG,MAApB;MAAA;IAAA,EAJA,EAKA,MAAC,IAAD;MAAA,wBAAgBV,QAAhB;IAAA,EALA,EAMA,MAAC,IAAD;MAAA,WAAOW,KAAK,CAACC,KAAb;IAAA,EANA,EAOA,MAAC,IAAD;MAAA,+BAAuBD,KAAK,CAACE,IAA7B;IAAA,EAPA,EASA,MAAC,IAAD;MAAM,KAAK,EAAEN,MAAM,CAACO,IAApB;MAAA,WACA,KAAC,MAAD;QAAQ,QAAQ,EAAEZ;MAAlB,EADA,EAEA,KAAC,MAAD;QAAQ,QAAQ,EAAEA;MAAlB,EAFA,EAGA,KAAC,MAAD;QAAQ,QAAQ,EAAEA;MAAlB,EAHA,EAIA,KAAC,MAAD;QAAQ,QAAQ,EAAEA;MAAlB,EAJA,EAKA,KAAC,MAAD;QAAQ,QAAQ,EAAEA;MAAlB,EALA,EAMA,KAAC,MAAD;QAAQ,QAAQ,EAAEA;MAAlB,EANA,EAOA,KAAC,MAAD;QAAQ,QAAQ,EAAEA;MAAlB,EAPA,EAQA,KAAC,MAAD;QAAQ,QAAQ,EAAEA;MAAlB,EARA,EASA,KAAC,MAAD;QAAQ,QAAQ,EAAEA;MAAlB,EATA,EAUA,KAAC,MAAD;QAAQ,QAAQ,EAAEA;MAAlB,EAVA,EAWA,KAAC,MAAD;QAAQ,QAAQ,EAAEA;MAAlB,EAXA,EAYA,KAAC,MAAD;QAAQ,QAAQ,EAAEA;MAAlB,EAZA;IAAA,EATA;EAAA,EADJ;AA2BH,CA3CD;;AA6CA,IAAMK,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;EAC7BR,SAAS,EAAE;IACTS,IAAI,EAAE,CADG;IAETC,eAAe,EAAE,WAFR;IAGTC,UAAU,EAAE,QAHH;IAITC,cAAc,EAAE;EAJP,CADkB;EAQ7BN,IAAI,EAAE;IACJO,aAAa,EAAE,KADX;IAEJC,QAAQ,EAAE,MAFN;IAGJC,KAAK,EAAE,GAHH;IAIJC,UAAU,EAAE;EAJR,CARuB;EAc7Bd,MAAM,EAAE;IACJe,UAAU,EAAE,MADR;IAEJC,YAAY,EAAE,EAFV;IAGJC,SAAS,EAAE,GAHP;IAIJC,KAAK,EAAE;EAJH;AAdqB,CAAlB,CAAf;AAwBA,eAAe9B,SAAf"},"metadata":{},"sourceType":"module"}